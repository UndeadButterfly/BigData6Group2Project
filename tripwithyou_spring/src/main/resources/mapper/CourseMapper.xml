<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.twy.tripwithyou_spring.mapper.CourseMapper">
    <resultMap id="courseMap" type="CourseDto" autoMapping="true">
        <id column="course_no" property="courseNo"/>
        <result column="upload_no" property="uploadNo"/>
        <result column="user_id" property="userId"/>
        <association property="uploadDto"
                     column="upload_no"
                     select="com.twy.tripwithyou_spring.mapper.UploadMapper.findById"
                     fetchType="lazy"
                     autoMapping="true"/>
    </resultMap>

    <select id="findAll" resultMap="courseMap">
        SELECT * FROM course
    </select>
    <!--    List<CourseDto> findPaging(PagingDto paging) throws Exception;-->
    <select id="findPaging" resultMap="courseMap">
        SELECT * FROM course
        ORDER BY ${orderField} ${direct}
        LIMIT #{startRow}, #{rows}
    </select>
    <!--    int count(PagingDto paging);-->
    <select id="count" resultType="int">
        SELECT COUNT(*) FROM course
    </select>
    <!--    CourseDto findById(String id) throws Exception;-->
    <select id="findById" resultMap="courseMap">
        SELECT * FROM course WHERE course_no=#{id}
    </select>
    <select id="findByUploadNo" resultMap="courseMap">
        SELECT * FROM course WHERE upload_no=#{uploadNo}
    </select>
    <select id="findPagingByUserId" resultMap="courseMap">
        SELECT * FROM course WHERE user_id = #{userId} ORDER BY ${pagingDto.orderField} ${pagingDto.direct} LIMIT
        #{pagingDto.startRow},#{pagingDto.rows}
    </select>
    <select id="countById" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM course WHERE user_id=#{userId}
    </select>
    <!--    int deleteById(String id) throws Exception;-->
    <delete id="deleteById">
        DELETE FROM course WHERE course_no=#{id}
    </delete>
    <!--    int updateById(CourseDto dto) throws Exception;-->
    <update id="update">
        UPDATE course SET
        startdate=#{startdate},
        enddate=#{enddate},
        duration=#{duration},
        image=#{image},
        budget=#{budget}
        WHERE course_no=#{courseNo}
    </update>
    <!--    int insert(CourseDto dto) throws Exception;-->
    <insert id="insert">
        INSERT INTO course (startdate, enddate, duration, image, budget, upload_no, user_id)
        VALUES (#{startdate}, #{enddate}, #{duration}, #{image}, #{budget}, #{uploadNo}, #{user_id})
    </insert>
</mapper>