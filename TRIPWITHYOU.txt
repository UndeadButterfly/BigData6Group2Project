DROP DATABASE TRIPWITHYOU;

CREATE DATABASE TRIPWITHYOU
DEFAULT CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI;

USE TRIPWITHYOU;

CREATE TABLE user(
    user_id VARCHAR(50),
    user_pw VARCHAR(50) NOT NULL,
    uname VARCHAR(10) NOT NULL,
    ubirth DATE,
    uphone VARCHAR(12),
    ugender INT(1) NOT NULL,
    uemail VARCHAR(30),
    usignup TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ulogin DATETIME,
    uloc VARCHAR(30) DEFAULT 0,
    uhobby INT(1) DEFAULT 1,
    umbti VARCHAR(6) DEFAULT 'ISTJ',
    ublood VARCHAR(3) DEFAULT 'AB+',
    utype INT(1),
    CONSTRAINT PK_user PRIMARY KEY(user_id),
    CONSTRAINT UK_user UNIQUE KEY (uphone,uemail)
);

CREATE TABLE course (
	course_no INT(8) NOT NULL,
	user_id VARCHAR(50) NOT NULL,
	ctitle VARCHAR(30) NOT NULL,
	cstart DATE NOT NULL,
	cend DATE NOT NULL,
	cduration INT(3) NOT NULL,
	ctransport INT(1),
	cmember INT(2) NOT NULL,
	cbudget INT(255),
	CONSTRAINT PK_course PRIMARY KEY(course_no),
	CONSTRAINT FK_courseUser FOREIGN KEY(user_id) 
        REFERENCES USER(user_id)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE upload (
    upload_no INT(8),
    upkind INT(2),
    user_id VARCHAR(50),
    uptitle VARCHAR(40) NOT NULL,
    upcontents LONGTEXT,
    upviews INT(8) NOT NULL DEFAULT 0,
    uplikes INT(8) NOT NULL DEFAULT 0,
    updislikes INT(8) NOT NULL DEFAULT 0,
    upreports INT(2) NOT NULL DEFAULT 0,
    upstate INT(1),
    CONSTRAINT PK_upload PRIMARY KEY(upload_no) ,
    CONSTRAINT FK_uploadUser FOREIGN KEY (user_id) 
        REFERENCES user(user_id) 
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE emp (
    empno INT(8),
    user_id VARCHAR(50) NOT NULL,
    estate INT(1),
    ehiredate DATE,
    CONSTRAINT PK_emp PRIMARY KEY(empno),
    CONSTRAINT FK_empUser FOREIGN KEY(user_id) 
        REFERENCES USER(user_id)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE relation (
    subject_id VARCHAR(50),
    relation INT(1),
    login_state INT(1),
    user_id VARCHAR(50),
    rel_memo VARCHAR(255),
    target_id VARCHAR(50),
    CONSTRAINT PK_relation PRIMARY KEY(subject_id),
    CONSTRAINT FK_relationUser FOREIGN KEY(user_id) 
        REFERENCES USER(user_id)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_relationTarget FOREIGN KEY(target_id) 
        REFERENCES USER(user_id)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE board (
    upload_no INT(8),
    board_no INT(8),
    battatch BLOB NULL,
    CONSTRAINT PK_board PRIMARY KEY(board_no),
    CONSTRAINT FK_boardUpload FOREIGN KEY(upload_no) 
        REFERENCES upload(upload_no) 
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE matching (
    upload_no INT(8),
    trip_no INT(8),
    tdestination VARCHAR(50),
    tstart DATE,
    tend DATE,
    tmember INT(2),
    CONSTRAINT PK_trip PRIMARY KEY(trip_no),
    CONSTRAINT FK_tripUpload FOREIGN KEY(upload_no) 
        REFERENCES upload(upload_no)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE favorite (
    favorite_no INT(8),
    user_id VARCHAR(50),
    course_no INT(8),
    CONSTRAINT PK_favorite PRIMARY KEY(favorite_no),
    CONSTRAINT FK_favoriteUser FOREIGN KEY(user_id) 
        REFERENCES user(user_id)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_favoriteCourse FOREIGN KEY(course_no) 
        REFERENCES course(course_no)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE reply (
    reply_no INT(8),
    upload_no INT(8),
    user_id VARCHAR(50),
    fk_reply_no INT,
    rcontent MEDIUMTEXT NOT NULL,
    rdate DATETIME DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT  PK_reply PRIMARY KEY (reply_no),
    CONSTRAINT FK_replyUploads FOREIGN KEY (upload_no) 
        REFERENCES upload(upload_no)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_replyUser FOREIGN KEY (user_id)
        REFERENCES user(user_id) 
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_replySelf FOREIGN KEY (fk_reply_no)
        REFERENCES reply(reply_no) 
        ON UPDATE CASCADE ON DELETE SET NULL
);

CREATE TABLE place(
    place_no VARCHAR(50),
    course_no INT(8),
    tour_id VARCHAR(12),
    pday INT(2), 
    porder INT(2),
    CONSTRAINT PK_place PRIMARY KEY (place_no),
    CONSTRAINT FK_palceCourse FOREIGN KEY (course_no)
        REFERENCES course(course_no)
        ON UPDATE CASCADE ON DELETE CASCADE
);
